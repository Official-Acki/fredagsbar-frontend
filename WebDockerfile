FROM node:18-bullseye-slim AS builder

WORKDIR /app
COPY package.json .
COPY package-lock.json .
RUN npm install

COPY . .

RUN npx expo prebuild -p all
RUN npx expo export -p web

# FROM node:18-bullseye-slim as platform-builder

# WORKDIR /app

# COPY package.json .
# COPY package-lock.json .
# COPY --from=builder /app/android/ android/
# COPY --from=builder /app/ios/ ios/

# RUN apt-get update && apt-get install -y \
#   openjdk-17-jdk bash git python3 make g++ curl unzip \
#   && rm -rf /var/lib/apt/lists/*

# RUN npm install

# ENV ANDROID_SDK_ROOT=/opt/android-sdk
# ENV PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools

# RUN mkdir -p $ANDROID_SDK_ROOT/cmdline-tools && \
#     curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip && \
#     unzip commandlinetools.zip -d $ANDROID_SDK_ROOT/cmdline-tools && \
#     mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest && \
#     rm commandlinetools.zip

# RUN yes | sdkmanager --sdk_root=${ANDROID_SDK_ROOT} --licenses && \
#     sdkmanager --sdk_root=${ANDROID_SDK_ROOT} "platform-tools" "platforms;android-34" "build-tools;34.0.0"

# # Uncomment to build release
# RUN cd android && ./gradlew assembleRelease

# # CMD ["bash"]

FROM node:alpine

WORKDIR /app

COPY --from=builder /app/dist/ dist/
COPY --from=builder /app/package.json .

# COPY --from=platform-builder /app/android/app/build/outputs/apk/release/app-release.apk /app/dist/

CMD [ "npx", "--yes", "expo", "serve" ]
